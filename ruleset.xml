<?xml version="1.0"?>
<ruleset name="PSR2 + Maagiline">
    <description>Maagiline coding standard</description>
    <rule ref="PSR12"/>

    <!-- Ban some functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="array" value="null"/>
                <element key="var_dump" value="null"/>
                <element key="dump" value="null"/>
                <element key="dd" value="null"/>
            </property>
        </properties>
    </rule>

    <!-- Require 4 indents for arrays-->
    <rule ref="Generic.Arrays.ArrayIndent">
        <properties>
            <property name="indent" value="4" />
        </properties>
        <!-- All non-psr2 rules will be treated as warnings, because some Laravel-generated files would fail our check -->
        <type>warning</type>
    </rule>

    <!-- NO space after NOT operator -->
    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0" />
        </properties>
        <type>warning</type>
    </rule>

    <rule ref="Generic.Formatting.SpaceAfterCast">
        <properties>
            <property name="spacing" value="1"/>
        </properties>
    </rule>

    <!-- Require spaces after string concatenation -->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="ignoreNewlines" value="true"/>
        </properties>
        <type>warning</type>
    </rule>

    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <type>warning</type>
    </rule>

    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <severity>0</severity>
    </rule>

    <!-- Require one empty line inbetween functions and no empty lines before first and after last function -->
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
            <property name="spacingAfterLast" value="0" />
        </properties>
    </rule>

    <!-- relative path from PHPCS source location -->
    <config name="installed_paths" value="../../slevomat/coding-standard"/>

    <!-- Require typehints, NO space before return typehint, NO long typehints and ? when nullable -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2" />
            <property name="newlinesCountAfterDeclare" value="2" />
            <property name="spacesCountAroundEqualsSign" value="0" />
        </properties>
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true" />
        </properties>
        <type>warning</type>
    </rule>

    <!-- Require commas after last array element -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma">
        <type>warning</type>
    </rule>

    <!-- NO useless or unused variables -->
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable">
        <type>warning</type>
    </rule>

    <!-- Require strict operators === and !== -->
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators">
        <type>warning</type>
    </rule>

    <!-- Require Throwable instead of Exception -->
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly">
        <type>warning</type>
    </rule>

    <!-- Require at least one namespace and empty lines around them -->
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile">
        <type>warning</type>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing">
        <properties>
            <property name="linesCountBeforeNamespace" value="1"/>
            <property name="linesCountAfterNamespace" value="1"/>
        </properties>
        <type>warning</type>
    </rule>

    <!-- Prevent consecutive empty lines (doesn't count classes) -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment">
        <type>warning</type>
    </rule>

    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
        <properties>
            <property name="forbiddenAnnotations" type="array">
                <element value="@author"/>
                <element value="@created"/>
                <element value="@version"/>
                <element value="@package"/>
                <element value="@copyright"/>
                <element value="@license"/>
                <element value="@throws"/>
            </property>
        </properties>
        <type>warning</type>
    </rule>

    <rule ref="Squiz.Commenting.InlineComment">
        <exclude name="Squiz.Commenting.InlineComment.DocBlock"/>
        <type>warning</type>
    </rule>

    <!-- Remove silly Class ClassName comments from legacy code-->
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments">
        <properties>
            <property name="forbiddenCommentPatterns" type="array">
                <element value="~^Class \S+~"/>
            </property>
        </properties>
        <type>warning</type>
    </rule>

    <!-- Show progression -->
    <arg value="p"/>
</ruleset>
